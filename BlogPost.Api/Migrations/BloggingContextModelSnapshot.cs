// <auto-generated />
using System;
using BlogPost.Api.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BlogPost.Api.Migrations
{
    [DbContext(typeof(BloggingContext))]
    partial class BloggingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("BlogPost.Api.Domain.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BlogContent")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("BloggerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("BlogId");

                    b.HasIndex("BloggerId");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("BlogPost.Api.Domain.Blogger", b =>
                {
                    b.Property<int>("BloggerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("BloggerId");

                    b.ToTable("Bloggers");
                });

            modelBuilder.Entity("BlogPost.Api.Domain.Blog", b =>
                {
                    b.HasOne("BlogPost.Api.Domain.Blogger", "Blogger")
                        .WithMany("Blogs")
                        .HasForeignKey("BloggerId");

                    b.Navigation("Blogger");
                });

            modelBuilder.Entity("BlogPost.Api.Domain.Blogger", b =>
                {
                    b.Navigation("Blogs");
                });
#pragma warning restore 612, 618
        }
    }
}
